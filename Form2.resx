<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <metadata name="timer3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>191, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>